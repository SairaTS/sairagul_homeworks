Что такое структуры данных? Зачем они нужны?

Структуры данных – это структуры которые могут хранить некоторые
данные вместе. Другими словами, они используются для хранения связанных данных.
В Python имеются четыре встроенных структуры данных: список, кортеж, словарь и
множество.
Список – это структура данных, которая содержит упорядоченный набор элементов, иначе говоря
хранит последовательность элементов.
Кортежи служат для хранения нескольких объектов вместе. Их можно рассматривать как
аналог списков, но без такой обширной функциональности. Кортежи неизменяемы в отличие от списка.

Словарь – это некий аналог адресной книги, в которой можно найти адрес или контактную информацию о человеке, зная лишь его имя(ключ) можно получить информацию и ключ должен быть уникальным.

Множества – это неупорядоченные наборы простых объектов. Они необходимы тогда, когда присутствие объекта в наборе важнее порядка или того, сколько раз данный объект
там встречается.
Используя множества, можно определять, является ли данное множество подмножеством другого множества, находить пересечения
множеств и так далее.

Что такое Hash Map?


Hash map представляет собой форму структуры данных, в которой хранятся пары ключ-значение (реализует абстрактные типы данных массива). Он работает, используя функцию для вычисления значения индекса, который затем сохраняет элементы для поиска, вставки, удаления и т. д. Это делает доступ к данным простым и быстрым. Хеш-таблицы используются для хранения пар ключ-значение, при этом ключ создается с помощью хеш-функции.

Встроенный в Python тип данных словаря используется для реализации хеш-таблиц или карт. Хеш-функция в Python генерирует ключи словаря. Элементы словаря не упорядочены и могут быть изменены.

Что такое Linked List?


Linked list — это линейно сгруппированные наборы данных. Они состоят из узлов, в которых содержатся данные и указатели.Cвязные списки не требуют хранения данных в одном непрерывном блоке памяти. Это облегчает добавление элементов в начало списка и их удаление. Указатели содержат ссылку на любую ячейку памяти, и для добавления нового узла не нужно перемещать массу данных. Один недостаток связных списков занимают больше памяти.


В каких случаях использовать Linked List и Hash Map?


HashMap - это одна реализация интерфейса карты. HashMap эффективны для определения значения на основе ключа и вставки и удаления значений на основе ключа. Записи HashMap не упорядочены.

LinkedList обеспечивает последовательный доступ и, как правило, более эффективен при вставке и удалении элементов в списке, однако он менее эффективен при доступе к элементам в списке.





